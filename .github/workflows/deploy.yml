name: Deploy Next.js

on:
  push:
    branches:
      - main  # 只在 main 分支上触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18  # 使用 Node.js 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      # - name: Generate Prisma client
      #   env:
      #     PRISMA_GENERATE_SKIP_AUTOINSTALL: 1
      #   run: npm run db:generate

      - name: Build project
        env:
          DATABASE_URL: file:./prisma/dev.db
        run: npm run deploy:build

      - name: Deploy to Debian Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}  # 服务器 IP 或域名
          username: ${{ secrets.SSH_USERNAME }}  # SSH 用户名
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # SSH 私钥
          source: "."  # 上传整个项目目录
          target: "/www/wwwroot/my-next-app"  # 服务器上的目标目录
          strip_components: 0
          rm: false
          overwrite: true
          # 排除不需要上传的文件
          tar_tmp_path: "/tmp"
          tar_exec: "tar -czf - --exclude=node_modules --exclude=.git --exclude=.github --exclude=.next/cache ."

      - name: Install dependencies on server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 确保 PM2 可用
            if ! command -v pm2 >/dev/null 2>&1; then
              npm i -g pm2
            fi
            cd /www/wwwroot/my-next-app
            # 写入生产环境变量文件（如已存在则跳过）
            if [ ! -f .env.production ]; then
              cat > .env.production << 'EOF'
DATABASE_URL="file:./prisma/dev.db"
NEXTAUTH_URL="${{ secrets.NEXTAUTH_URL }}"
NEXTAUTH_SECRET="${{ secrets.NEXTAUTH_SECRET }}"
NODE_ENV="production"
EOF
            fi
            npm ci --omit=dev || npm install --production
            npm run db:generate
            npm run db:push || true

      - name: Start or reload PM2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /www/wwwroot/my-next-app
            if pm2 describe spring-lament-blog >/dev/null 2>&1; then
              pm2 reload spring-lament-blog --update-env
            else
              pm2 start ecosystem.config.js --env production
            fi
            pm2 save