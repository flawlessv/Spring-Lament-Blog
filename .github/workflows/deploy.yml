name: 部署到腾讯云服务器

on:
  push:
    branches:
      - main  # 当推送到 main 分支时触发
  workflow_dispatch:  # 允许手动触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 安装依赖
        run: npm ci
        # postinstall 会自动运行 prisma generate

      - name: 验证 Prisma Client 生成
        run: npm run db:generate

      - name: 构建项目
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}

      # 打包构建产物（避免上传问题）
      - name: 打包构建产物
        run: |
          tar -czf build.tar.gz .next package.json package-lock.json prisma public next.config.js ecosystem.config.js middleware.ts
          ls -lh build.tar.gz

      # 上传打包文件到服务器
      - name: 上传到服务器
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          source: "build.tar.gz"
          target: "/tmp/"
          strip_components: 0

      # SSH 连接服务器执行部署命令
      - name: 在服务器上解压并部署
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            cd /www/wwwroot/my-next-app
            
            echo "=== 1. 停止应用 ==="
            pm2 stop spring-lament-blog || true
            
            echo "=== 2. 解压构建产物 ==="
            tar -xzf /tmp/build.tar.gz -C /www/wwwroot/my-next-app
            rm -f /tmp/build.tar.gz
            
            echo "=== 3. 检查 .next 目录 ==="
            ls -la .next/ | head -10
            
            echo "=== 4. 安装/更新依赖 ==="
            if [ ! -d "node_modules" ] || [ package-lock.json -nt node_modules ]; then
              echo "安装生产依赖..."
              npm ci --production --prefer-offline
            else
              echo "依赖无变化，跳过安装"
            fi
            
            echo "=== 5. 生成 Prisma Client ==="
            npm run db:generate
            
            echo "=== 6. 推送数据库变更 ==="
            npm run db:push
            
            echo "=== 7. 重启应用 ==="
            pm2 restart spring-lament-blog || pm2 start ecosystem.config.js
            
            echo "=== 8. 检查应用状态 ==="
            sleep 3
            pm2 status spring-lament-blog
